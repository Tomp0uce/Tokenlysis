name: Build images with commit version

on:
  push:
    branches: [ main ]        # adapter si besoin
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # requis uniquement si vous poussez vers un registre
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute version from commit count
        run: |
          echo "APP_VERSION=$(git rev-list --count HEAD)" >> $GITHUB_ENV
          echo "GIT_COMMIT=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # --- Connexion registre (OPTIONNEL) ---
      # GHCR :
      # - name: Login to GHCR
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # Docker Hub :
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image (no push)
        run: |
          docker buildx build \
            --build-arg APP_VERSION="${APP_VERSION}" \
            --label "org.opencontainers.image.revision=${GIT_COMMIT}" \
            -f Dockerfile . \
            --load   # charge l'image localement pour validation (pas de push)

      # --- Variante PUSH (d√©commentez pour publier) ---
      # - name: Build & Push Docker image
      #   if: always()
      #   run: |
      #     OWNER_LC="$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')"
      #     docker buildx build \
      #       --build-arg APP_VERSION="${APP_VERSION}" \
      #       --label "org.opencontainers.image.revision=${GIT_COMMIT}" \
      #       -f Dockerfile . \
      #       --push \
      #       -t "ghcr.io/${OWNER_LC}/tokenlysis:${APP_VERSION}" \
      #       -t "ghcr.io/${OWNER_LC}/tokenlysis:latest"

